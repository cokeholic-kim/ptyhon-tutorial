파이썬 자료형

숫자형) 숫자형태로 이루어진 자료형(정수,실수,8진수,16진수)
문자열) 문자나 문자들의 집합 " " , ' ' , """ """, ''' '''
리스트) 여러가지 자료의 묶음(배열) num = [1, 2, 3, 4, 5, 6]
                리스트명 = [요소1,요소2,요소3] /리스트명[0] 인덱스로 접근가능	
                리스트 관련 함수
                1. append() 리스트의 마지막 요소를 추가
                => 리스트.append(추가할요소)
                2. sort() 리스트 요소를 순서대로 정렬
                => 리스트.sort()
                3.reverse() 리스트 뒤집기
                => 리스트.reverse()
                4.index() 리스트에 해당 값이 있으면 그 값의 index 값을 리턴 없으면 오류발생
                => 리스트.index.(value)
                5.insert(start,value) 리스트에 요소 삽입 start번째 위치에 value를 삽입
                => 리스트.insert(2,20)
                6.remove(value) 리스트에서 첫번째로 나오는 value를 삭제
                => ex) list = [1,2,3,1,2,3] , list.remove(2) , list = [1,3,1,2,3]
                7.pop() 리스트의 맨 마지막요소를 리턴하고 그 요소는 삭제
                => 리스트.pop()
                8.count(value) 리스트안에 value 가 몇개 있는지 개수를 리턴
                => list=[1,2,3,1,2,3] , list.count(3) //2
튜플 자료형) ( ) *요소값을 변경할수없음
t1 = ( )
t2 = (1,) // 값이하나일때 쉼표를 찍어줘야함
t3 = (1,2,3)
t4 = 1,2,3,4 //괄호 생략 가능

딕셔너리 자료형 (key : value)
d1 = {'name':'green','age':30} 
d1 = {'name':'green','age':30,'name':'blue'} //뒤에 같은키로 만들면 뒤의값으로 덮어쓰기됨
        d1['name'] 키를 이용해서 값에 접근
        1.key 리스트 만들기 keys()
        => 딕셔너리.keys() //파이썬 2.7까지 key만 리스트로 돌려줌
        //이후버전에서는 dict_keys 객체로 돌려줌
        2.value리스트 만들기 values()
        => 딕셔너리.values() //2.7까지 value만 리스트로 돌려줌
        //이후버전에서는 dict_values객체로 돌려줌
        3.key,value 쌍으로 구하기 items()
        => key와 value의 쌍을 튜플로 묶은 값을 dict_items객체로 돌려줌
        4.key:value쌍 모두 지우기 clear()
        => 딕셔너리.clear()
        5.key로 value값 구하기 get()
        => 딕셔너리.get(key) //존재하지 않는키에 접근시 None을 리턴
           딕셔너리[key] //존재하지 않는 키로 접근시 오류발생
        6.해당 key가 딕셔너리 안에 있는지 조사 in
        => 'key' in 딕셔너리 있으면 True리턴 없으면 False리턴
집합 자료형) 파이썬 2.3부터 지원 집합에 관련된 것을 쉽게 처리하기 위해 만든 자료형
        *중복을 허용하지 않음,순서가 없음
        s1 = set([1,2,3])
        s2 = set("Hello")
        s= set()
        s3 = set([1,2,3,4,5,1,2,3])
        li = list(s3)
        [1,2,3,4,5]
        1.값 추가하기 add 
        =>집합.add(value)
        2.값 여러개 추가하기 update
        =>집합.update([4,5,6])
        3.특정 값 제거하기 remove()
        =>집합.remove(value)
        4.교집합 집합1 & 집합2 ,집합1.intersection(집합2)
        =>s1 = set([1,2,3,4,5,6])
        =>s2 = set([4,5,6,7,8,9])
        s1 & s2 {4,5,6}
        s1.intersection(s2) // {4,5,6}
        5.합집합 집합1 | 집합2 , 집합1.union(집합2)
        두개의 집합을 더해준다 중복값은 하나만들어감
        => s1 | s2 {1,2,3,4,5,6,7,8,9} , s1.union(s2)
        6.차집합 집합1 - 집합2 , 집합1.difference(집합2)
        =>s1 = set([1,2,3,4,5,6])
        s2 = set([4,5,6,7,8,9])
        s1 - s2 // {1,2,3}
        s1.difference(s2) {1,2,3}

                
부울 자료형) 불 자료형 참과 거짓을 나타내는 자료형 True 참 False 거짓

제어문
1.조건문
        1)if문 elif문 else문
        if 조건문 :
                수행할 문장
        //들여쓰기 주의        
        *비교 연산자
        x < y x가 y보다 작다
        x > y x가 y보다 크다
        x == y x와 y가 같다
        x != y x와 y가 같지않다
        x >= y x가 y보다 크거나 같다
        x <= y x가 y보다 작거나 같다.

        *논리 연산자
        and연산자 1<10 and 5<6 둘중 모두 참일때 참
        or 연산자 1<10 or 5>10 둘중 하나만 참이어도 참
        not연산자 not x x가 거짓이면 참, x가 참이면 거짓
2.반복문


