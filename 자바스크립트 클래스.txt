html

<div id="app"></div>

<script>
	const app = document.querySelector("#app")
	const student = ["stu1","stu2","stu3"]
	app.innerHTML =`
	<ul>
		${student.map(s=>`<li>${s}</li>`).join(" ")}
		->[`<li>stu1</li>`,`<li>stu2</li>`,`<li>stu3</li>`] 이걸 문자열로 바꿔줌 
	</ul>`
</script>

class Component{
	target
	state
	constructor(target){
		this.target = target;
		this.render( );
		this.setup( );
	}
	//자식클래스에서 구현 setup,template,setEvent
	setup( ){ } //초기 state를 설정
	render( ){  //화면을 다시 그려줌
		this.target.innerHTML = this.template( );
		this.setEvent(); //html을 렌더링한후에 이벤트연결
	} 
	setState(newState){ 
		this.state = {...this.state,...newState}
	}
	setEvent( ){ }
	template( ){ return " "; }
}

ex) APP클래스를 생성하고 app은 component클래스를 상속받음 
항상 똑같이 실행되는 메소드는 부모요소에서 만들고 변수처럼
클래스마다 다르게 들어가야하는메소드는 부모요소에서 선언만하고 자식클래스에서
오버라이딩해서 사용.

모듈화.
한파일 안에 모든 기능을 작성하지 않고 작성한 코드를 분할
<script type="module"><script>

index.html
App.js
Component.js
Student.js
